# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
      
#     - name: Install kubectl
#       run: |
#         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#         chmod +x kubectl
#         sudo mv kubectl /usr/local/bin/
      
#     - name: Connect to EC2
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.REMOTE_HOST }}
#         username: ${{ secrets.REMOTE_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         port: 22
#         script: |
#           # Run kubectl apply command on the EC2 instance
#           kubectl apply -f petstore.yaml

name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Set up JDK 8
    #   uses: actions/setup-java@v2
    #   with:
    #     java-version: '8'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
#        sudo apt-get install -y maven

    - name: Build the project
      run: mvn package

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: hyperpeam1/trandoan92ag:latest
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

    - name: Deploy to Kubernetes
      run: |
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yml
        kubectl apply -f petstore.yaml

#     - name: Copy jar file to EC2 instance
#       uses: appleboy/scp-action@master
#       with:
#         host: ${{ secrets.REMOTE_HOST }}
#         username: ${{ secrets.REMOTE_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         source: "target/openapi-petstore-*.jar"
#         target: "/home/ec2-user/app.jar"

#     - name: SSH to EC2 instance and stop the application
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.REMOTE_HOST }}
#         username: ${{ secrets.REMOTE_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         script: |
#           pkill -f app.jar

#     - name: SSH to EC2 instance and start the application
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.REMOTE_HOST }}
#         username: ${{ secrets.REMOTE_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         script: |
#           nohup java -jar /home/ec2-user/app.jar > app.log 2>&1 &
# #          sudo systemctl start app.jar
